Each folder has some files with common names:
- userIds.txt: includes users with their labels separated by tab (\t), for example '625986322	bot'. It will be used as the gold standard. One primary use of this file to collect_tweets.py that collects tweets for the users.
- tweet_collection_erro.log: includes the logs of tweet collection phase.
- feature_botometerV4.dat: Includes features in key-value format and is suitable for trainModel_ESC.py to train botometerV4 classifiers. We have 1160 features in this file. For some users you may see less features (missing values).
- feature_botometerV3.dat: This can be used to reproduce the classifier used in Botometer-V3. It should have 1209 features. For some users you may see less features (missing values).
- tweets.jsons.gz: includes the tweets for subset of users in userIds.txt. It can be used as an input to feature_extract.py.
- users_feature_extracted.log: includes the saved logs of feature extraction.
- *_dataset_botometerV3.csv: dataset in the tabular format. Feature names are available in the header. This is suitable to be read as a data frame object. V3 referes to botometer version 3 in which we employed 1209 features. These files can be used to reproduce the classifier used in botometer-V3.
This file has the information feature_botometerV3.dat has. For the missing values we put 0 (e.g. features for some users have no values in features_botometer-V*.dat))
- *_dataset_botometerV4.csv: this dataset should have 1160 features which represent revisited set of features used in botometer V4 . 


Hints: 
1- The main files you need for each dataset is a)userIds.txt 2)tweets.jsons.gz. The rest can be either generated by our code or are some supplementary files (e.g. generated logs )
for the dataset that can be ignored. 

2- You may see some folders don't have old (V3) set of features (for example astroturf and midtime-election-2018). That's because they were not used in botometer-v3. For more info about check the botometer-v4 paper:
https://arxiv.org/abs/2006.06867 
Or check the configuration files of botoemter-v3 and v4. 
https://github.iu.edu/Botometer/ModelTraining/blob/master/configurations/evaluate_botometer-v3.json
https://github.iu.edu/Botometer/ModelTraining-ESC/blob/ESC-patch/configurations/botometer-v4-config.json

3- You can find more info about how files are generated by our python code here:
 https://github.iu.edu/Botometer/ModelTraining-ESC/wiki